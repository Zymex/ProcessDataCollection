// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProcessDataCollection.Context;

namespace ProcessDataCollection.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20190517143533_Initial Model")]
    partial class InitialModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KittingApplication.ActiveDirectory.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<Guid>("Guid");

                    b.Property<bool>("IsAdmin");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastName");

                    b.Property<string>("OperatorId");

                    b.Property<string>("SocketName");

                    b.Property<string>("Theme");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("ApplicationUsers");
                });

            modelBuilder.Entity("ProcessDataCollection._ApplicationModels.DataModels.AdminModels.Audit.ApplicationActionLog", b =>
                {
                    b.Property<int>("LOG_ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ACTION_INITIATED");

                    b.Property<string>("APPLICATION_ACIONS_LOGGED");

                    b.Property<DateTime>("DATE_LOGGED");

                    b.HasKey("LOG_ID");

                    b.ToTable("AU_APPLICATION_LOG");
                });

            modelBuilder.Entity("ProcessDataCollection._ApplicationModels.DataModels.AdminModels.Audit.KitActionLog", b =>
                {
                    b.Property<int>("LOG_ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ACTION_INITIATED");

                    b.Property<DateTime>("DATE_LOGGED");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("KIT_LOGGED");

                    b.HasKey("LOG_ID");

                    b.ToTable("AU_KIT_LOG");

                    b.HasDiscriminator<string>("Discriminator").HasValue("KitActionLog");
                });

            modelBuilder.Entity("ProcessDataCollection._ApplicationModels.DataModels.AdminModels.Audit.UserActionLog", b =>
                {
                    b.Property<int>("LOG_ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ACTION_INITIATED");

                    b.Property<DateTime>("DATE_LOGGED");

                    b.Property<string>("USER_LOGGED");

                    b.HasKey("LOG_ID");

                    b.ToTable("AU_USER_LOG");
                });

            modelBuilder.Entity("ProcessDataCollection._ApplicationModels.DataModels.AdminModels.DataTemplate.KitTemplate", b =>
                {
                    b.Property<Guid>("TemplateId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("TemplateName");

                    b.HasKey("TemplateId");

                    b.ToTable("TPL_KitTemplates");
                });

            modelBuilder.Entity("ProcessDataCollection._ApplicationModels.DataModels.AdminModels.DataTemplate.ProcessTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("KitTemplateTemplateId");

                    b.Property<string>("ProcessName");

                    b.Property<int>("StepOrder");

                    b.HasKey("Id");

                    b.HasIndex("KitTemplateTemplateId");

                    b.ToTable("TPL_ProcessTemplates");
                });

            modelBuilder.Entity("ProcessDataCollection._ApplicationModels.DataModels.AdminModels.Process.ProcessDefinitions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("DEF_ProcessDefinitions");
                });

            modelBuilder.Entity("ProcessDataCollection._ApplicationModels.DataModels.AdminModels.ResolutionDictionary.CategoryItems", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ReasonCategoryId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("ReasonCategoryId");

                    b.ToTable("RES_CategoryItems");
                });

            modelBuilder.Entity("ProcessDataCollection._ApplicationModels.DataModels.AdminModels.ResolutionDictionary.Reason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("RES_Reasons");
                });

            modelBuilder.Entity("ProcessDataCollection._ApplicationModels.DataModels.AdminModels.ResolutionDictionary.ReasonCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ReasonId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("ReasonId");

                    b.ToTable("RES_ReasonCategories");
                });

            modelBuilder.Entity("ProcessDataCollection._ApplicationModels.DataModels.Kit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("DateAdded");

                    b.Property<bool?>("FirstBuild");

                    b.Property<bool>("Opened");

                    b.Property<string>("PartNumber");

                    b.Property<int>("StartQty");

                    b.Property<string>("WorkOrder");

                    b.HasKey("Id");

                    b.ToTable("_Kit");
                });

            modelBuilder.Entity("ProcessDataCollection._ApplicationModels.DataModels.Process", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("In");

                    b.Property<int>("InCount");

                    b.Property<Guid>("KitId");

                    b.Property<string>("PartNumber");

                    b.Property<string>("ProcessName");

                    b.Property<int>("ReworkQty");

                    b.Property<int>("ScrapQty");

                    b.Property<int>("StepOrder");

                    b.Property<string>("WorkOrder");

                    b.HasKey("Id");

                    b.HasIndex("KitId");

                    b.ToTable("_Processes");
                });

            modelBuilder.Entity("ProcessDataCollection._ApplicationModels.DataModels.ProcessEntries", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateAdded");

                    b.Property<int>("In");

                    b.Property<string>("OperatorId");

                    b.Property<int>("Out");

                    b.Property<int>("ProcessId");

                    b.HasKey("Id");

                    b.HasIndex("ProcessId");

                    b.ToTable("_ProcessEntries");
                });

            modelBuilder.Entity("ProcessDataCollection._ApplicationModels.DataModels.ProcessItems", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<int>("ProcessEntriesId");

                    b.Property<int>("Qty");

                    b.Property<string>("Reason");

                    b.Property<bool>("Rework");

                    b.Property<string>("Scrap");

                    b.HasKey("Id");

                    b.HasIndex("ProcessEntriesId");

                    b.ToTable("_ProcessItems");
                });

            modelBuilder.Entity("ProcessDataCollection._ApplicationModels.DataModels.AdminModels.Audit.ProcessActionLog", b =>
                {
                    b.HasBaseType("ProcessDataCollection._ApplicationModels.DataModels.AdminModels.Audit.KitActionLog");

                    b.Property<string>("PROCESS_LOGGED");

                    b.Property<string>("USER");

                    b.HasDiscriminator().HasValue("ProcessActionLog");
                });

            modelBuilder.Entity("ProcessDataCollection._ApplicationModels.DataModels.AdminModels.DataTemplate.ProcessTemplate", b =>
                {
                    b.HasOne("ProcessDataCollection._ApplicationModels.DataModels.AdminModels.DataTemplate.KitTemplate")
                        .WithMany("ProcessTemplate")
                        .HasForeignKey("KitTemplateTemplateId");
                });

            modelBuilder.Entity("ProcessDataCollection._ApplicationModels.DataModels.AdminModels.ResolutionDictionary.CategoryItems", b =>
                {
                    b.HasOne("ProcessDataCollection._ApplicationModels.DataModels.AdminModels.ResolutionDictionary.ReasonCategory")
                        .WithMany("Items")
                        .HasForeignKey("ReasonCategoryId");
                });

            modelBuilder.Entity("ProcessDataCollection._ApplicationModels.DataModels.AdminModels.ResolutionDictionary.ReasonCategory", b =>
                {
                    b.HasOne("ProcessDataCollection._ApplicationModels.DataModels.AdminModels.ResolutionDictionary.Reason")
                        .WithMany("Categories")
                        .HasForeignKey("ReasonId");
                });

            modelBuilder.Entity("ProcessDataCollection._ApplicationModels.DataModels.Process", b =>
                {
                    b.HasOne("ProcessDataCollection._ApplicationModels.DataModels.Kit")
                        .WithMany("Processes")
                        .HasForeignKey("KitId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProcessDataCollection._ApplicationModels.DataModels.ProcessEntries", b =>
                {
                    b.HasOne("ProcessDataCollection._ApplicationModels.DataModels.Process")
                        .WithMany("ProcessEntries")
                        .HasForeignKey("ProcessId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProcessDataCollection._ApplicationModels.DataModels.ProcessItems", b =>
                {
                    b.HasOne("ProcessDataCollection._ApplicationModels.DataModels.ProcessEntries")
                        .WithMany("ProcessItems")
                        .HasForeignKey("ProcessEntriesId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
